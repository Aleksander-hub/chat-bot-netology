import telebot
import os
from dotenv import load_dotenv

# --- –ö–∞—Å—Ç–æ–º–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã ---
import ai_core  # –ù–∞—à–µ –Ω–æ–≤–æ–µ AI-—è–¥—Ä–æ

# --- –ò–º–ø–æ—Ä—Ç—ã –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ (–æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---
import time
import threading
from datetime import datetime
import pytz
from functions import load_tasks # –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫—É –≤—Å–µ –µ—â–µ –Ω—É–∂–Ω–æ –∑–∞–≥—Ä—É–∂–∞—Ç—å –∑–∞–¥–∞—á–∏

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---
load_dotenv()
token = os.getenv('TELEGRAM_TOKEN')
if not token:
    raise ValueError("–ù–µ –Ω–∞–π–¥–µ–Ω TELEGRAM_TOKEN –≤ .env —Ñ–∞–π–ª–µ!")
bot = telebot.TeleBot(token)

# --- –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ ---
ADMIN_ID = os.getenv('ADMIN_ID', "YOUR_TELEGRAM_ID")
MOSCOW_TZ = pytz.timezone('Europe/Moscow')
last_notification_date = None

# --- –°–ø—Ä–∞–≤–∫–∞ ---
try:
    with open('help.txt', 'r', encoding='utf-8') as f:
        HELP_MESSAGE = f.read()
except FileNotFoundError:
    HELP_MESSAGE = "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π Telegram ---

@bot.message_handler(commands=["start", "help"])
def start_help_command(message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥ /start –∏ /help."""
    bot.send_message(message.chat.id, HELP_MESSAGE, parse_mode='Markdown')

@bot.message_handler(content_types=["text"])
def handle_text_message(message):
    """
    –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
    –ü–µ—Ä–µ–¥–∞–µ—Ç —Ç–µ–∫—Å—Ç –≤ AI-—è–¥—Ä–æ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.
    """
    user_id = message.chat.id
    text = message.text

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º "–î—É–º–∞—é..." –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
    thinking_message = bot.send_message(user_id, "–î—É–º–∞—é... ü§î", disable_notification=True)

    try:
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç AI-—è–¥—Ä–∞
        response = ai_core.process_message(user_id, text)
        bot.edit_message_text(response, user_id, thinking_message.message_id)
    except Exception as e:
        print(f"[–û—à–∏–±–∫–∞] –ü—Ä–æ–±–ª–µ–º–∞ –≤ AI-—è–¥—Ä–µ: {e}")
        bot.edit_message_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", user_id, thinking_message.message_id)


# --- –õ–æ–≥–∏–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---
def check_tasks_and_notify():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∑–∞–¥–∞—á–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ."""
    global last_notification_date
    if ADMIN_ID == "YOUR_TELEGRAM_ID":
        print("–í–Ω–∏–º–∞–Ω–∏–µ: ADMIN_ID –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è.")
        return

    today_moscow = datetime.now(MOSCOW_TZ).date()
    today_str = today_moscow.strftime('%Y-%m-%d')

    if today_moscow == last_notification_date:
        return # –£–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ —Å–µ–≥–æ–¥–Ω—è

    current_tasks = load_tasks()
    if today_str in current_tasks and current_tasks[today_str]:
        tasks_today = current_tasks[today_str]
        message = "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! ‚òÄÔ∏è –ù–∞ —Å–µ–≥–æ–¥–Ω—è —É –≤–∞—Å –µ—Å—Ç—å –∑–∞–¥–∞—á–∏:\n\n"
        for i, task in enumerate(tasks_today, 1):
            message += f"{i}. {task}\n"

        try:
            bot.send_message(ADMIN_ID, message)
            last_notification_date = today_moscow # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—Ç—É –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
            print(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–¥–∞—á–∞—Ö –Ω–∞ {today_str} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")
    else:
        print(f"–ù–∞ {today_str} –Ω–µ—Ç –∑–∞–¥–∞—á, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")

def run_scheduler():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ü–∏–∫–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π."""
    while True:
        now_moscow = datetime.now(MOSCOW_TZ)
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–¥–∞—á–∏ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ 9 —É—Ç—Ä–∞
        if now_moscow.hour == 9:
            check_tasks_and_notify()
        time.sleep(3600) # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑ –≤ —á–∞—Å

# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ ---
if __name__ == '__main__':
    scheduler_thread = threading.Thread(target=run_scheduler)
    scheduler_thread.daemon = True
    scheduler_thread.start()
    print("–ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–ø—É—â–µ–Ω.")

    print("AI-–±–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    bot.polling(none_stop=True)